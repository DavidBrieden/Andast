(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var Game = require('./Game.js');

var Field = {};

Field.init = function () {

    Field.offsetx = 20;
    Field.offsety = 20;
    Field.blocksize = 10;
    Field.width = 20;
    Field.height = 40;

    Field.field = [];
    for (var x = 0; x < Field.width; x++) {
        var column = [];
        for (var y = 0; y < Field.height; y++) {
            column.push({
                show: false,
                color: 0
            });
        }
        Field.field.push(column);
    }

    Field.field[0][0] = {
        show: true,
        color: "blue"
    };
};

Field.render = function () {
    for (var x = 0; x < Field.width; x++) {
        for (var y = 0; y < Field.height; y++) {
            if (Field.field[x][y].show == true) {
                Game.ctx.beginPath();
                Game.ctx.lineWidth = "3";
                Game.ctx.strokeStyle = Field.field[x][y].color;

                Game.ctx.rect(x * Field.blocksize + Field.offsetx, (Field.height - 1) * Field.blocksize + Field.offsety - y * Field.blocksize, Field.blocksize, Field.blocksize);
                Game.ctx.stroke();
            }
        }
    }

    Game.ctx.beginPath();
    Game.ctx.lineWidth = "1";
    Game.ctx.strokeStyle = "black";
    Game.ctx.rect(Field.offsetx, Field.offsety, Field.width * Field.blocksize, Field.height * Field.blocksize);
    Game.ctx.stroke();
};

module.exports = Field;

},{"./Game.js":2}],2:[function(require,module,exports){
"use strict";

var Game = {};

Game.test = function () {
    console.log("Game Test");
};

Game.init = function () {
    Game.canvas = document.getElementById("canvas");
    Game.canvas.width = 800;
    Game.canvas.height = 600;
    Game.ctx = Game.canvas.getContext("2d");
};

module.exports = Game;

},{}],3:[function(require,module,exports){
'use strict';

var Game = require('./Game.js');
var Field = require('./Field.js');

Game.init();

Field.init();
Field.render();

},{"./Field.js":1,"./Game.js":2}]},{},[3])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY2xpZW50L3NjcmlwdHMvRmllbGQuanMiLCJzcmMvY2xpZW50L3NjcmlwdHMvR2FtZS5qcyIsInNyYy9jbGllbnQvc2NyaXB0cy9tYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxJQUFJLE9BQU8sUUFBUSxXQUFSLENBQVg7O0FBRUEsSUFBSSxRQUFRLEVBQVo7O0FBRUEsTUFBTSxJQUFOLEdBQWEsWUFBVTs7QUFFbkIsVUFBTSxPQUFOLEdBQWdCLEVBQWhCO0FBQ0EsVUFBTSxPQUFOLEdBQWdCLEVBQWhCO0FBQ0EsVUFBTSxTQUFOLEdBQWtCLEVBQWxCO0FBQ0EsVUFBTSxLQUFOLEdBQWMsRUFBZDtBQUNBLFVBQU0sTUFBTixHQUFlLEVBQWY7O0FBRUEsVUFBTSxLQUFOLEdBQWMsRUFBZDtBQUNBLFNBQUksSUFBSSxJQUFFLENBQVYsRUFBWSxJQUFFLE1BQU0sS0FBcEIsRUFBMEIsR0FBMUIsRUFBOEI7QUFDMUIsWUFBSSxTQUFTLEVBQWI7QUFDQSxhQUFJLElBQUksSUFBRSxDQUFWLEVBQVksSUFBRSxNQUFNLE1BQXBCLEVBQTJCLEdBQTNCLEVBQStCO0FBQzNCLG1CQUFPLElBQVAsQ0FBWTtBQUNSLHNCQUFNLEtBREU7QUFFUix1QkFBTztBQUZDLGFBQVo7QUFJSDtBQUNELGNBQU0sS0FBTixDQUFZLElBQVosQ0FBaUIsTUFBakI7QUFDSDs7QUFFRCxVQUFNLEtBQU4sQ0FBWSxDQUFaLEVBQWUsQ0FBZixJQUFvQjtBQUNoQixjQUFNLElBRFU7QUFFaEIsZUFBTztBQUZTLEtBQXBCO0FBS0gsQ0F6QkQ7O0FBNEJBLE1BQU0sTUFBTixHQUFlLFlBQVU7QUFDckIsU0FBSSxJQUFJLElBQUUsQ0FBVixFQUFZLElBQUUsTUFBTSxLQUFwQixFQUEwQixHQUExQixFQUE4QjtBQUMxQixhQUFJLElBQUksSUFBRSxDQUFWLEVBQVksSUFBRSxNQUFNLE1BQXBCLEVBQTJCLEdBQTNCLEVBQStCO0FBQzNCLGdCQUFJLE1BQU0sS0FBTixDQUFZLENBQVosRUFBZSxDQUFmLEVBQWtCLElBQWxCLElBQTBCLElBQTlCLEVBQW9DO0FBQ2hDLHFCQUFLLEdBQUwsQ0FBUyxTQUFUO0FBQ0EscUJBQUssR0FBTCxDQUFTLFNBQVQsR0FBbUIsR0FBbkI7QUFDQSxxQkFBSyxHQUFMLENBQVMsV0FBVCxHQUF1QixNQUFNLEtBQU4sQ0FBWSxDQUFaLEVBQWUsQ0FBZixFQUFrQixLQUF6Qzs7QUFFQSxxQkFBSyxHQUFMLENBQVMsSUFBVCxDQUNJLElBQUUsTUFBTSxTQUFSLEdBQWtCLE1BQU0sT0FENUIsRUFFSyxDQUFDLE1BQU0sTUFBTixHQUFhLENBQWQsSUFBaUIsTUFBTSxTQUF4QixHQUFtQyxNQUFNLE9BQXpDLEdBQWtELElBQUUsTUFBTSxTQUY5RCxFQUdJLE1BQU0sU0FIVixFQUlJLE1BQU0sU0FKVjtBQU1BLHFCQUFLLEdBQUwsQ0FBUyxNQUFUO0FBQ0g7QUFDSjtBQUNKOztBQUVELFNBQUssR0FBTCxDQUFTLFNBQVQ7QUFDQSxTQUFLLEdBQUwsQ0FBUyxTQUFULEdBQW1CLEdBQW5CO0FBQ0EsU0FBSyxHQUFMLENBQVMsV0FBVCxHQUF1QixPQUF2QjtBQUNBLFNBQUssR0FBTCxDQUFTLElBQVQsQ0FDSSxNQUFNLE9BRFYsRUFFSSxNQUFNLE9BRlYsRUFHSSxNQUFNLEtBQU4sR0FBWSxNQUFNLFNBSHRCLEVBSUksTUFBTSxNQUFOLEdBQWUsTUFBTSxTQUp6QjtBQU1BLFNBQUssR0FBTCxDQUFTLE1BQVQ7QUFDSCxDQTdCRDs7QUFpQ0EsT0FBTyxPQUFQLEdBQWlCLEtBQWpCOzs7OztBQ2pFQSxJQUFJLE9BQU8sRUFBWDs7QUFFQSxLQUFLLElBQUwsR0FBWSxZQUFVO0FBQ2xCLFlBQVEsR0FBUixDQUFZLFdBQVo7QUFDSCxDQUZEOztBQUlBLEtBQUssSUFBTCxHQUFZLFlBQVU7QUFDbEIsU0FBSyxNQUFMLEdBQWMsU0FBUyxjQUFULENBQXdCLFFBQXhCLENBQWQ7QUFDQSxTQUFLLE1BQUwsQ0FBWSxLQUFaLEdBQW9CLEdBQXBCO0FBQ0EsU0FBSyxNQUFMLENBQVksTUFBWixHQUFxQixHQUFyQjtBQUNBLFNBQUssR0FBTCxHQUFXLEtBQUssTUFBTCxDQUFZLFVBQVosQ0FBdUIsSUFBdkIsQ0FBWDtBQUNILENBTEQ7O0FBT0EsT0FBTyxPQUFQLEdBQWlCLElBQWpCOzs7OztBQ2JBLElBQUksT0FBTyxRQUFRLFdBQVIsQ0FBWDtBQUNBLElBQUksUUFBUSxRQUFRLFlBQVIsQ0FBWjs7QUFFQSxLQUFLLElBQUw7O0FBR0EsTUFBTSxJQUFOO0FBQ0EsTUFBTSxNQUFOIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsInZhciBHYW1lID0gcmVxdWlyZSgnLi9HYW1lLmpzJyk7XG5cbnZhciBGaWVsZCA9IHt9O1xuXG5GaWVsZC5pbml0ID0gZnVuY3Rpb24oKXtcblxuICAgIEZpZWxkLm9mZnNldHggPSAyMDtcbiAgICBGaWVsZC5vZmZzZXR5ID0gMjA7XG4gICAgRmllbGQuYmxvY2tzaXplID0gMTA7XG4gICAgRmllbGQud2lkdGggPSAyMDtcbiAgICBGaWVsZC5oZWlnaHQgPSA0MDtcblxuICAgIEZpZWxkLmZpZWxkID0gW107XG4gICAgZm9yKHZhciB4PTA7eDxGaWVsZC53aWR0aDt4Kyspe1xuICAgICAgICB2YXIgY29sdW1uID0gW107XG4gICAgICAgIGZvcih2YXIgeT0wO3k8RmllbGQuaGVpZ2h0O3krKyl7XG4gICAgICAgICAgICBjb2x1bW4ucHVzaCh7XG4gICAgICAgICAgICAgICAgc2hvdzogZmFsc2UsXG4gICAgICAgICAgICAgICAgY29sb3I6IDBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIEZpZWxkLmZpZWxkLnB1c2goY29sdW1uKTtcbiAgICB9XG4gICAgXG4gICAgRmllbGQuZmllbGRbMF1bMF0gPSB7XG4gICAgICAgIHNob3c6IHRydWUsXG4gICAgICAgIGNvbG9yOiBcImJsdWVcIlxuICAgIH07XG5cbn07XG5cblxuRmllbGQucmVuZGVyID0gZnVuY3Rpb24oKXtcbiAgICBmb3IodmFyIHg9MDt4PEZpZWxkLndpZHRoO3grKyl7XG4gICAgICAgIGZvcih2YXIgeT0wO3k8RmllbGQuaGVpZ2h0O3krKyl7XG4gICAgICAgICAgICBpZiAoRmllbGQuZmllbGRbeF1beV0uc2hvdyA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgR2FtZS5jdHguYmVnaW5QYXRoKCk7XG4gICAgICAgICAgICAgICAgR2FtZS5jdHgubGluZVdpZHRoPVwiM1wiO1xuICAgICAgICAgICAgICAgIEdhbWUuY3R4LnN0cm9rZVN0eWxlID0gRmllbGQuZmllbGRbeF1beV0uY29sb3I7XG5cbiAgICAgICAgICAgICAgICBHYW1lLmN0eC5yZWN0KFxuICAgICAgICAgICAgICAgICAgICB4KkZpZWxkLmJsb2Nrc2l6ZStGaWVsZC5vZmZzZXR4LFxuICAgICAgICAgICAgICAgICAgICAoKEZpZWxkLmhlaWdodC0xKSpGaWVsZC5ibG9ja3NpemUpK0ZpZWxkLm9mZnNldHktKHkqRmllbGQuYmxvY2tzaXplKSxcbiAgICAgICAgICAgICAgICAgICAgRmllbGQuYmxvY2tzaXplLFxuICAgICAgICAgICAgICAgICAgICBGaWVsZC5ibG9ja3NpemVcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIEdhbWUuY3R4LnN0cm9rZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgR2FtZS5jdHguYmVnaW5QYXRoKCk7XG4gICAgR2FtZS5jdHgubGluZVdpZHRoPVwiMVwiO1xuICAgIEdhbWUuY3R4LnN0cm9rZVN0eWxlID0gXCJibGFja1wiO1xuICAgIEdhbWUuY3R4LnJlY3QoXG4gICAgICAgIEZpZWxkLm9mZnNldHgsXG4gICAgICAgIEZpZWxkLm9mZnNldHksXG4gICAgICAgIEZpZWxkLndpZHRoKkZpZWxkLmJsb2Nrc2l6ZSxcbiAgICAgICAgRmllbGQuaGVpZ2h0ICogRmllbGQuYmxvY2tzaXplXG4gICAgKTtcbiAgICBHYW1lLmN0eC5zdHJva2UoKTtcbn07XG5cblxuXG5tb2R1bGUuZXhwb3J0cyA9IEZpZWxkOyIsInZhciBHYW1lID0ge307XG5cbkdhbWUudGVzdCA9IGZ1bmN0aW9uKCl7XG4gICAgY29uc29sZS5sb2coXCJHYW1lIFRlc3RcIik7XG59O1xuXG5HYW1lLmluaXQgPSBmdW5jdGlvbigpe1xuICAgIEdhbWUuY2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIik7XG4gICAgR2FtZS5jYW52YXMud2lkdGggPSA4MDA7XG4gICAgR2FtZS5jYW52YXMuaGVpZ2h0ID0gNjAwO1xuICAgIEdhbWUuY3R4ID0gR2FtZS5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBHYW1lO1xuIiwidmFyIEdhbWUgPSByZXF1aXJlKCcuL0dhbWUuanMnKTtcbnZhciBGaWVsZCA9IHJlcXVpcmUoJy4vRmllbGQuanMnKTtcblxuR2FtZS5pbml0KCk7XG5cblxuRmllbGQuaW5pdCgpO1xuRmllbGQucmVuZGVyKCk7Il19
